
@{
    Layout = null;
}
@model Customer_Detail.Models.Customer_Details

<script src="~/scripts/jquery.validate.min.js"></script>
<script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    function changestate(input) {
        var cid = $('#Country').val();
        $.post('/home/changestate?c_id=' + cid,
            function (data) {
                var error = data.data.error;
                if (error == "No") {
                    //return false;
                }
                else {
                    $("#State").empty();
                    console.log(data.data);
                    $("#State").append('<option value="">Select State</option>');
                    for (k = 0; k < data.data.length; k++) {
                        //var setheightofapp = data.appointmentlist[k].time;
                        //appointmentdesctription.push({ description: data.appointmentlist[k].description, color: data.appointmentlist[k].notes, appointment_id: data.appointmentlist[k].appointment_id, time: setheightofapp + "px" });
                        $("#State").append('<option value="' + data.data[k].StateID + '">' + data.data[k].StateName + '</option>');

                    }
                }
            });
    }
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
    $(document).ready(function () {
        var value = $("#file").val();
        $('#user_img').attr('src', value);
    });

</script>

@using (Html.BeginForm("editcustomer", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.Image, htmlAttributes: new { @id="file" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Country, new SelectList(ViewBag.viewcountrylist as IEnumerable<SelectListItem>, "Value", "Text"), "Select Country", new { @class = "form-control", @onchange = "changestate()" })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.State, new SelectList(ViewBag.viewstatelist as IEnumerable<SelectListItem>, "Value", "Text"), "Select State", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @type="file", onchange = "show(this)" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                <img id="user_img" height="100" width="90" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
