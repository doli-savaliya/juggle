@model juggle.Models.tbl_worktype

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Worktype_Edit</title>
    <script src="~/scripts/jquery.validate.min.js"></script>
    <script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/bootstrap-multiselect.js"></script>
    <link href="~/CSS/bootstrap-multiselect.css" rel="stylesheet" />

    <script>
        $(function () {

            



            $('body').on('keydown', '#name', function (e) {
                console.log(this.value);
                if (e.which === 32 && e.target.selectionStart === 0) {
                    return false;
                }
            });

            //$('#time').multiselect({
            //    includeSelectAllOption: true,
            //    numberDisplayed: 7,
            //    onDropdownHide: function (event) {
            //        var value1 = $('#time').val();
            //        $('#multiple').val(value1);
            //    }
            //});

            $('#time').multiselect({
                includeSelectAllOption: true,
                numberDisplayed: 7,
                onDropdownHide: function (event) {
                    var value1 = $('#time').val();
                    $('#multiple').val(value1);
                }
            });

            //$('#timing').multiselect({
            //    includeSelectAllOption: true,
            //    onDropdownHide: function (event) {
            //        var value1 = $('#attribute_id').val();
            //        $('#attribute_idmul').val(value1);
            //    }
            //});

            var getValues = $('#edittime').val();
            $('#multiple').val(getValues);
            //Get value from db and set
            var getValues = $('#edittime').val();
            $('#multiple').val(getValues);

            var str = getValues;
            var str_array = str.split(',');
            $("#time").val(str_array);
            $("#time").multiselect("refresh");
        });
    </script>

    <script src="~/js/spectrum.js"></script>
    <link href="~/CSS/spectrum.css" rel="stylesheet" />


    <script>
        $("#colour").spectrum({
            preferredFormat: "hex6",
            showPaletteOnly: true,
            showPalette: true,
            hideAfterPaletteSelect: true,
            allowEmpty: true,
            palette: [
         ["#000", "#444", "#666", "#999", "#ccc", "#eee", "#f3f3f3", "#fff"],
         ["#f00", "#f90", "#ff0", "#0f0", "#0ff", "#00f", "#90f", "#f0f"],
         ["#f4cccc", "#fce5cd", "#fff2cc", "#d9ead3", "#d0e0e3", "#cfe2f3", "#d9d2e9", "#ead1dc"],
         ["#ea9999", "#f9cb9c", "#ffe599", "#b6d7a8", "#a2c4c9", "#9fc5e8", "#b4a7d6", "#d5a6bd"],
         ["#e06666", "#f6b26b", "#ffd966", "#93c47d", "#76a5af", "#6fa8dc", "#8e7cc3", "#c27ba0"],
         ["#c00", "#e69138", "#f1c232", "#6aa84f", "#45818e", "#3d85c6", "#674ea7", "#a64d79"],
         ["#900", "#b45f06", "#bf9000", "#38761d", "#134f5c", "#0b5394", "#351c75", "#741b47"],
         ["#600", "#783f04", "#7f6000", "#274e13", "#0c343d", "#073763", "#20124d", "#4c1130"]
            ]
        });
    </script>

    <script>
        $(document).ready(function () {
            $("#color").spectrum("set", $("#color").val());
        });

    </script>

    <script>
        function calling() {
            $("#color").val($("#colour").val());
        }
    </script>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.work_id)

            @Html.HiddenFor(model => model.created_date)
            @Html.HiddenFor(model => model.user_id)
            <div class="form-group">
                @*@Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">Service Type Name:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @id = "updatename", @placeholder = "Please Enter Service Type", @maxlength = "30" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">Service Type Color:</label>
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control", @type = "color", @id = "colour" } })*@
                    @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control", @id = "color", @type = "text", @readonly = "true", @placeholder = "Service Type Color is required" } })
                    @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control", @id = "colour", @onchange = "calling()" } })
                    @*@Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control", @id = "colour", @type="text" ,@onchange="calling()" } })*@

                    @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.work_id, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                    @Html.EditorFor(model => model.user_id, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @value = Session["User_Id"] } })
                    @Html.EditorFor(model => model.created_date, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @value = DateTime.Now } })
                    @Html.EditorFor(model => model.updated_date, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @value = DateTime.Now } })
                </div>
            </div>

            @*<div class="form-group" id="daydiv">
                <label class="control-label col-md-2">Time:</label>
                <div class="col-md-10">
                    <select class="form-control" id="time" multiple="multiple">
                        <option Value="1">15</option>
                        <option Value="2">30</option>
                        <option Value="3">45</option>
                        <option Value="4">60</option>
                        <option Value="5">75</option>
                        <option Value="6">90</option>
                        <option Value="7">105</option>
                        <option Value="8">120</option>
                    </select>
                  
                    <input type="hidden" id="multiple" name="multiple" />
                    @Html.ValidationMessageFor(model => model.time, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group" id="daydiv">
                <label class="control-label col-md-2">Time:</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.time, new SelectList(ViewBag.servicetypeminute as IEnumerable<SelectListItem>, "Value", "Text"), new { @class = "form-control", @multiple = "multiple" })
                    @Html.ValidationMessageFor(model => model.time, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.time, new { @name = "edittime", @id = "edittime" })
                    <input type="hidden" id="multiple" name="multiple" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" name="update" id="update" class="btn btn-default  btn-success" />
                </div>
            </div>
        </div>
    }

</body>
</html>
