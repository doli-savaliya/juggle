@model juggle.Models.tbl_worktype

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create_Worktype</title>
    <script src="~/scripts/jquery.validate.min.js"></script>
    <script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <link href="~/CSS/main.css" rel="stylesheet" />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @*@Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">Work Type Name:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Please Enter Work Type Name", @id = "name", @onchange = "checkemail();" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">Colour:</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.color, new { htmlAttributes = new { @class = "form-control", @type = "color", @id = "colour" } })
                    @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })

                    @Html.EditorFor(model => model.work_id, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                    @Html.EditorFor(model => model.user_id, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @value = Session["User_Id"] } })
                    @Html.EditorFor(model => model.created_date, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @value = DateTime.Now } })
                    @Html.EditorFor(model => model.updated_date, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @value = DateTime.Now } })
                </div>
            </div>

            <div class="form-group">
                @*@Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">Work Type Category Name:</label>
                <div class="col-md-10">
                    @*@Html.DropDownListFor(model => model.worktype_id, ViewBag.CurrencyList as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control", @id = "worktypename" } })*@

                    @Html.DropDownListFor(model => model.worktype_id, new SelectList(ViewBag.CurrencyList as IEnumerable<SelectListItem>, "Value", "Text"),"Select WorkType Category Name",new { @class = "form-control", @id = "worktypename" })
                    @Html.ValidationMessageFor(model => model.worktype_id, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" name="Create" id="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }


</body>
</html>
