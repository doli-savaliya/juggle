
@{
    ViewBag.Title = "ManageWorkers";
}
<script src="~/scripts/jquery.validate.min.js"></script>
<script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
<style type="text/css">
    .grid {
        width: 100%;
    }
</style>

<div style="padding:7px 0;">
    <input type="button" value="Add New Worker " id="create_worker " class="btn btn-default" data-toggle="modal" data-target="#myModal_create" onclick="createWorker()" />

</div>
<div style="width:100%;" class="table-wrapper">

    @functions {
        public static string Sorter(string columnName, string columnHeader, WebGrid grid)
        {
            string name_col = null;
            //name_col = string.Format("{0} {1}", columnHeader, grid.SortColumn != columnName ?grid.SortDirection == SortDirection.Ascending ? "▲" :"▼" : string.Empty);
            name_col = string.Format("{0} {1}", columnHeader, grid.SortColumn != "Username" ? grid.SortDirection == SortDirection.Ascending ? "▲" : "▼" : string.Empty);
            return name_col;
            //return string.Format("{0} {1}", columnHeader, grid.SortColumn == columnName ?
            //  grid.SortDirection == SortDirection.Ascending ? "▲" :
            //"▼" : string.Empty);
        }
    }
    @{
        if (Model != null)
        {
            WebGrid grid = new WebGrid(Model);
            @grid.GetHtml(
        tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",

         mode: WebGridPagerModes.All,
         firstText: "<< First",
         previousText: "< Prev",
         nextText: "Next >",
         lastText: "Last >>",
         columns: new[] {
         grid.Column("username",header: Sorter("Username", "Username", grid)),
         grid.Column("address",header: Sorter("Address", "Address", grid)),
         grid.Column("phoneno",header: Sorter("PhoneNo", "PhoneNo", grid)),
         grid.Column("Status",header:Sorter("Status", "Status", grid)),
         grid.Column("user_id", header: "Actions", canSort:false,
         format: @<text>
            @Html.Raw("<img src='/img/edit.png' title='Edit' id='edit-image' style='cursor:pointer' data-toggle='modal' data-target='#myModal_edit' data-editId="+ item.user_id  +"  onclick='EditWorker("+item.user_id+")' />")
            @Html.Raw("<img src='/img/delete.png' title='Delete' style='cursor:pointer'  onclick='DeleteWorker("+ item.user_id +")'  />")
        </text>
        )
     })
        }
        else
        {
            <table class="webgrid-table">
                <thead>
                    <tr class="webgrid-header">
                        <th scope="col">
                            Username
                        </th>
                        <th scope="col">
                            Address
                        </th>
                        <th scope="col">
                            PhoneNo
                        </th>
                        <th scope="col">
                            Status
                            @*</th>*@
                        <th scope="col">
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="webgrid-row-style">
                        @*<td colspan="5">No Record Found</td>*@
                    </tr>
                </tbody>
            </table>
        }

    }


    <div id="DivToAppendPartialVoew"></div>
    <!-- Modal -->
    <div class="modal fade" id="myModal_create" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Worker</h4>
                </div>
                <div class="modal-body" id="modal-body_create">
                </div>
            </div>
        </div>
    </div>



    <!-- Modal -->
    <div class="modal fade" id="myModal_edit" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Worker</h4>
                </div>
                <div class="modal-body" id="modal-body_Edit">

                    @*<button type="button" class="close">Cancel</button>*@
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        function createWorker() {
            var div = $("#modal-body_create");
            var cookievalue = $.cookie('AccountCookies');
            if (cookievalue = "" || cookievalue.length <= 0) {
                location.reload();
            }
            else {
                div.load("/Workers/Create_Workers", function () {

                    // bind dropdown from using json
                    $.getJSON("/Workers/getStatus", null,
                    function (data) {

                        $("#dllstatus").empty();
                        $("#dllstatus").append($("<option />").val("0").text("--Select Status--"));
                        $.each(data, function () {
                            $("#dllstatus").append($("<option />").val(this.Value).text(this.Text));
                        });
                        // get load time value from dropdown
                        var getValue = $("#dllstatus").val();

                        $('#status_hidden').val(getValue);


                    });
                });
            }

        }
        // get onchange value from dropdown
        function dropchange() {

            var getValue = $("#dllstatus").val();
            $('#status_hidden').val(getValue);
            //document.getElementById("status_hidden").value = getValue;
        }
        function EditWorker(user_id) {

            var ph = $("#modal-body_Edit");

            var cookievalue = $.cookie('AccountCookies');
            if (cookievalue = "" || cookievalue.length <= 0) {
                location.reload();
            }
            else {
                ph.load("/Workers/Edit_Workers?user_id=" + user_id, function () {
                    $.getJSON("/Workers/getStatus", null,
              function (data) {

                  $("#dllstatus").empty();
                  $("#dllstatus").append($("<option />").val("0").text("--Select Status--"));
                  $.each(data, function () {
                      $("#dllstatus").append($("<option />").val(this.Value).text(this.Text));
                  });

                  // get load time value from dropdown
                  var getDbId = $("#status_hidden_select").val();
                  //alert(getDbId)
                  $("#dllstatus").val(getDbId).change();
                  $("#status_hidden").val(getDbId);
              });
                });
            }

        }

        function DeleteWorker(user_id) {
            if (confirm("Are you sure you want to delete this Worker?")) {
                var data = { 'user_id': user_id }
                $.post('/Workers/Delete_Workers?user_id=' + user_id, function (data) {
                    if (data == true)

                        location = location.href;
                    else

                        location = location.href;
                });
            }
        }


    </script>

</div>
